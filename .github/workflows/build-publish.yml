# !!! WARNING !!! #
# This workflow is reused in all LDES Java projects. Edit with caution #
name: Build & Publish Project

on:
  workflow_call:
    inputs:
      SETTINGS_FILE:
        required: false
        type: string
      SKIP_DOCKER:
        required: false
        type: string
      IMAGE_NAME:
        required: true
        type: string
    secrets:
      SDK_USERNAME:
        required: false
      SDK_PASSWORD:
        required: false
      SONAR_TOKEN:
        required: true
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: Informatievlaanderen/ldes-server

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 18
      - name: Define Sonar Project Name
        uses: mad9000/actions-find-and-replace-string@1
        id: sonar-name
        with:
          source: ${{ github.repository }}
          find: '/'
          replace: '_'
      - name: Set Optional Maven Settings Variable
        if: ${{ inputs.SETTINGS_FILE != '' }}
        ## Reference your environment variables
        run: |
          echo "SETTINGS_ARG=--settings ${{ inputs.SETTINGS_FILE }}" >> $GITHUB_ENV
      - name: Test, Analyse And Publish Jar to GitHub Packages
        env:
          SDK_USERNAME: ${{ secrets.SDK_USERNAME }} # Temporary hack to get around PAT for github packages
          SDK_PASSWORD: ${{ secrets.SDK_PASSWORD }} # Temporary hack to get around PAT for github packages
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_EXT }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_EXT }}
        run: |
          mvn ${{ env.SETTINGS_ARG  }} -B verify deploy org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dintegrationtestskip=true -Dsonar.projectKey=${{ steps.sonar-name.outputs.value  }} -Pcoverage
          export VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Log in to the Container registry
        if: ${{ inputs.SKIP_DOCKER != 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: Informatievlaanderen
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ inputs.SKIP_DOCKER != 'true' }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=${{env.version}}
            type=raw,value={{date 'YYYYMMDDTHHmm'}}
          flavor: |
            latest=true

      - name: Build and push Docker image
        if: ${{ inputs.SKIP_DOCKER != 'true' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}