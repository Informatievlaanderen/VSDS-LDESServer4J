# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build Docs

on:
  push:
    branches:
      - main
      - develop

  workflow_dispatch:

env:
  BASE_URL: "/VSDS-LDESServer4J"
  TITLE: "Linked Data Event Stream Server"
  GIT_CONFIG_USERNAME: ${{ vars.GIT_CONFIG_USERNAME }}
  GIT_CONFIG_EMAIL: ${{ vars.GIT_CONFIG_EMAIL }}
  DEPLOY_DOCS_PAT: ${{ secrets.DEPLOY_DOCS_PAT }}

jobs:

  build:
    if: ${{ vars.DEPLOY_DOCUMENTATION != 'false' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: ${{ vars.JAVA_DISTRIBUTION }}
          java-version: ${{ vars.JAVA_VERSION }}
      - name: Determine version
        id: version
        run: |
          export VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "version=$VERSION" >> $>> $GITHUB_OUTPUT
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Build with Jekyll
        run: |
          cd docs 
          bundle install
          bundle exec jekyll build --baseurl "${{env.BASE_URL}}/${{steps.version.outputs.version}}" -s "./" -d "./_site"
        env:
          JEKYLL_ENV: production
      - uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - run: npm i -g @yalz/gh-pages-multi
      - run: |
          git config --global user.name "${{ env.GIT_CONFIG_USERNAME }}"
          git config --global user.email "${{ env.GIT_CONFIG_EMAIL }}"
          git config --global url.https://${{ env.DEPLOY_DOCS_PAT }}@github.com/.insteadOf https://github.com/
        env:
          PAT: ${{secrets.DEPLOY_DOCS_PAT}}
      - run: |
          gh-pages-multi deploy --title "${{env.TITLE}}" -t ${{steps.version.outputs.version}} -s docs/_site
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
